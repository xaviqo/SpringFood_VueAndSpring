{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\nvar Source = require(\"./Source\");\n\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\n\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\n\nfunction ReplaceSource(source, name) {\n  Source.call(this);\n  this._source = source;\n  this._name = name;\n  this.replacements = [];\n}\n\nmodule.exports = ReplaceSource;\nReplaceSource.prototype = Object.create(Source.prototype);\nReplaceSource.prototype.constructor = ReplaceSource;\n\nReplaceSource.prototype.replace = function (start, end, newValue) {\n  if (typeof newValue !== \"string\") throw new Error(\"insertion must be a string, but is a \" + typeof newValue);\n  this.replacements.push([start, end, newValue, this.replacements.length]);\n};\n\nReplaceSource.prototype.insert = function (pos, newValue) {\n  if (typeof newValue !== \"string\") throw new Error(\"insertion must be a string, but is a \" + typeof newValue + \": \" + newValue);\n  this.replacements.push([pos, pos - 1, newValue, this.replacements.length]);\n};\n\nReplaceSource.prototype.source = function (options) {\n  return this._replaceString(this._source.source());\n};\n\nReplaceSource.prototype._sortReplacements = function () {\n  this.replacements.sort(function (a, b) {\n    var diff = b[1] - a[1];\n    if (diff !== 0) return diff;\n    diff = b[0] - a[0];\n    if (diff !== 0) return diff;\n    return b[3] - a[3];\n  });\n};\n\nReplaceSource.prototype._replaceString = function (str) {\n  if (typeof str !== \"string\") throw new Error(\"str must be a string, but is a \" + typeof str + \": \" + str);\n\n  this._sortReplacements();\n\n  var result = [str];\n  this.replacements.forEach(function (repl) {\n    var remSource = result.pop();\n\n    var splitted1 = this._splitString(remSource, Math.floor(repl[1] + 1));\n\n    var splitted2 = this._splitString(splitted1[0], Math.floor(repl[0]));\n\n    result.push(splitted1[1], repl[2], splitted2[0]);\n  }, this);\n  result = result.reverse();\n  return result.join(\"\");\n};\n\nrequire(\"./SourceAndMapMixin\")(ReplaceSource.prototype);\n\nReplaceSource.prototype.node = function (options) {\n  this._sortReplacements();\n\n  var result = [this._source.node(options)];\n  this.replacements.forEach(function (repl) {\n    var remSource = result.pop();\n\n    var splitted1 = this._splitSourceNode(remSource, Math.floor(repl[1] + 1));\n\n    var splitted2;\n\n    if (Array.isArray(splitted1)) {\n      splitted2 = this._splitSourceNode(splitted1[0], Math.floor(repl[0]));\n\n      if (Array.isArray(splitted2)) {\n        result.push(splitted1[1], this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\n      } else {\n        result.push(splitted1[1], this._replacementToSourceNode(splitted1[1], repl[2]), splitted1[0]);\n      }\n    } else {\n      splitted2 = this._splitSourceNode(remSource, Math.floor(repl[0]));\n\n      if (Array.isArray(splitted2)) {\n        result.push(this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\n      } else {\n        result.push(repl[2], remSource);\n      }\n    }\n  }, this);\n  result = result.reverse();\n  return new SourceNode(null, null, null, result);\n};\n\nReplaceSource.prototype.listMap = function (options) {\n  this._sortReplacements();\n\n  var map = this._source.listMap(options);\n\n  var currentIndex = 0;\n  var replacements = this.replacements;\n  var idxReplacement = replacements.length - 1;\n  var removeChars = 0;\n  map = map.mapGeneratedCode(function (str) {\n    var newCurrentIndex = currentIndex + str.length;\n\n    if (removeChars > str.length) {\n      removeChars -= str.length;\n      str = \"\";\n    } else {\n      if (removeChars > 0) {\n        str = str.substr(removeChars);\n        currentIndex += removeChars;\n        removeChars = 0;\n      }\n\n      var finalStr = \"\";\n\n      while (idxReplacement >= 0 && replacements[idxReplacement][0] < newCurrentIndex) {\n        var repl = replacements[idxReplacement];\n        var start = Math.floor(repl[0]);\n        var end = Math.floor(repl[1] + 1);\n        var before = str.substr(0, Math.max(0, start - currentIndex));\n\n        if (end <= newCurrentIndex) {\n          var after = str.substr(Math.max(0, end - currentIndex));\n          finalStr += before + repl[2];\n          str = after;\n          currentIndex = Math.max(currentIndex, end);\n        } else {\n          finalStr += before + repl[2];\n          str = \"\";\n          removeChars = end - newCurrentIndex;\n        }\n\n        idxReplacement--;\n      }\n\n      str = finalStr + str;\n    }\n\n    currentIndex = newCurrentIndex;\n    return str;\n  });\n  var extraCode = \"\";\n\n  while (idxReplacement >= 0) {\n    extraCode += replacements[idxReplacement][2];\n    idxReplacement--;\n  }\n\n  if (extraCode) {\n    map.add(extraCode);\n  }\n\n  return map;\n};\n\nReplaceSource.prototype._replacementToSourceNode = function (oldNode, newString) {\n  var map = oldNode.toStringWithSourceMap({\n    file: \"?\"\n  }).map;\n  var original = new SourceMapConsumer(map.toJSON()).originalPositionFor({\n    line: 1,\n    column: 0\n  });\n\n  if (original) {\n    return new SourceNode(original.line, original.column, original.source, newString);\n  } else {\n    return newString;\n  }\n};\n\nReplaceSource.prototype._splitSourceNode = function (node, position) {\n  if (typeof node === \"string\") {\n    if (node.length <= position) return position - node.length;\n    return position <= 0 ? [\"\", node] : [node.substr(0, position), node.substr(position)];\n  } else {\n    for (var i = 0; i < node.children.length; i++) {\n      position = this._splitSourceNode(node.children[i], position);\n\n      if (Array.isArray(position)) {\n        var leftNode = new SourceNode(node.line, node.column, node.source, node.children.slice(0, i).concat([position[0]]), node.name);\n        var rightNode = new SourceNode(node.line, node.column, node.source, [position[1]].concat(node.children.slice(i + 1)), node.name);\n        leftNode.sourceContents = node.sourceContents;\n        return [leftNode, rightNode];\n      }\n    }\n\n    return position;\n  }\n};\n\nReplaceSource.prototype._splitString = function (str, position) {\n  return position <= 0 ? [\"\", str] : [str.substr(0, position), str.substr(position)];\n};","map":{"version":3,"names":["Source","require","SourceNode","SourceListMap","fromStringWithSourceMap","SourceMapConsumer","ReplaceSource","source","name","call","_source","_name","replacements","module","exports","prototype","Object","create","constructor","replace","start","end","newValue","Error","push","length","insert","pos","options","_replaceString","_sortReplacements","sort","a","b","diff","str","result","forEach","repl","remSource","pop","splitted1","_splitString","Math","floor","splitted2","reverse","join","node","_splitSourceNode","Array","isArray","_replacementToSourceNode","listMap","map","currentIndex","idxReplacement","removeChars","mapGeneratedCode","newCurrentIndex","substr","finalStr","before","max","after","extraCode","add","oldNode","newString","toStringWithSourceMap","file","original","toJSON","originalPositionFor","line","column","position","i","children","leftNode","slice","concat","rightNode","sourceContents"],"sources":["/home/xavi/Desktop/TRABAJOS/SpringFood/FE/springfood/node_modules/google-fonts-webpack-plugin/node_modules/webpack-sources/lib/ReplaceSource.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar Source = require(\"./Source\");\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar fromStringWithSourceMap = require(\"source-list-map\").fromStringWithSourceMap;\r\nvar SourceMapConsumer = require(\"source-map\").SourceMapConsumer;\r\n\r\nfunction ReplaceSource(source, name) {\r\n\tSource.call(this);\r\n\tthis._source = source;\r\n\tthis._name = name;\r\n\tthis.replacements = [];\r\n}\r\nmodule.exports = ReplaceSource;\r\n\r\nReplaceSource.prototype = Object.create(Source.prototype);\r\nReplaceSource.prototype.constructor = ReplaceSource;\r\n\r\nReplaceSource.prototype.replace = function(start, end, newValue) {\r\n\tif(typeof newValue !== \"string\")\r\n\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue);\r\n\tthis.replacements.push([start, end, newValue, this.replacements.length]);\r\n};\r\n\r\nReplaceSource.prototype.insert = function(pos, newValue) {\r\n\tif(typeof newValue !== \"string\")\r\n\t\tthrow new Error(\"insertion must be a string, but is a \" + typeof newValue + \": \" + newValue);\r\n\tthis.replacements.push([pos, pos - 1, newValue, this.replacements.length]);\r\n};\r\n\r\nReplaceSource.prototype.source = function(options) {\r\n\treturn this._replaceString(this._source.source());\r\n};\r\n\r\nReplaceSource.prototype._sortReplacements = function() {\r\n\tthis.replacements.sort(function(a, b) {\r\n\t\tvar diff = b[1] - a[1];\r\n\t\tif(diff !== 0)\r\n\t\t\treturn diff;\r\n\t\tdiff = b[0] - a[0];\r\n\t\tif(diff !== 0)\r\n\t\t\treturn diff;\r\n\t\treturn b[3] - a[3];\r\n\t});\r\n};\r\n\r\nReplaceSource.prototype._replaceString = function(str) {\r\n\tif(typeof str !== \"string\")\r\n\t\tthrow new Error(\"str must be a string, but is a \" + typeof str + \": \" + str);\r\n\tthis._sortReplacements();\r\n\tvar result = [str];\r\n\tthis.replacements.forEach(function(repl) {\r\n\t\tvar remSource = result.pop();\r\n\t\tvar splitted1 = this._splitString(remSource, Math.floor(repl[1] + 1));\r\n\t\tvar splitted2 = this._splitString(splitted1[0], Math.floor(repl[0]));\r\n\t\tresult.push(splitted1[1], repl[2], splitted2[0]);\r\n\t}, this);\r\n\tresult = result.reverse();\r\n\treturn result.join(\"\");\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(ReplaceSource.prototype);\r\n\r\nReplaceSource.prototype.node = function(options) {\r\n\tthis._sortReplacements();\r\n\tvar result = [this._source.node(options)];\r\n\tthis.replacements.forEach(function(repl) {\r\n\t\tvar remSource = result.pop();\r\n\t\tvar splitted1 = this._splitSourceNode(remSource, Math.floor(repl[1] + 1));\r\n\t\tvar splitted2;\r\n\t\tif(Array.isArray(splitted1)) {\r\n\t\t\tsplitted2 = this._splitSourceNode(splitted1[0], Math.floor(repl[0]));\r\n\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(splitted1[1], this._replacementToSourceNode(splitted1[1], repl[2]), splitted1[0]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsplitted2 = this._splitSourceNode(remSource, Math.floor(repl[0]));\r\n\t\t\tif(Array.isArray(splitted2)) {\r\n\t\t\t\tresult.push(this._replacementToSourceNode(splitted2[1], repl[2]), splitted2[0]);\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(repl[2], remSource);\r\n\t\t\t}\r\n\t\t}\r\n\t}, this);\r\n\tresult = result.reverse();\r\n\treturn new SourceNode(null, null, null, result);\r\n};\r\n\r\nReplaceSource.prototype.listMap = function(options) {\r\n\tthis._sortReplacements();\r\n\tvar map = this._source.listMap(options);\r\n\tvar currentIndex = 0;\r\n\tvar replacements = this.replacements;\r\n\tvar idxReplacement = replacements.length - 1;\r\n\tvar removeChars = 0;\r\n\tmap = map.mapGeneratedCode(function(str) {\r\n\t\tvar newCurrentIndex = currentIndex + str.length;\r\n\t\tif(removeChars > str.length) {\r\n\t\t\tremoveChars -= str.length;\r\n\t\t\tstr = \"\";\r\n\t\t} else {\r\n\t\t\tif(removeChars > 0) {\r\n\t\t\t\tstr = str.substr(removeChars);\r\n\t\t\t\tcurrentIndex += removeChars;\r\n\t\t\t\tremoveChars = 0;\r\n\t\t\t}\r\n\t\t\tvar finalStr = \"\";\r\n\t\t\twhile(idxReplacement >= 0 && replacements[idxReplacement][0] < newCurrentIndex) {\r\n\t\t\t\tvar repl = replacements[idxReplacement];\r\n\t\t\t\tvar start = Math.floor(repl[0]);\r\n\t\t\t\tvar end = Math.floor(repl[1] + 1);\r\n\t\t\t\tvar before = str.substr(0, Math.max(0, start - currentIndex));\r\n\t\t\t\tif(end <= newCurrentIndex) {\r\n\t\t\t\t\tvar after = str.substr(Math.max(0, end - currentIndex));\r\n\t\t\t\t\tfinalStr += before + repl[2];\r\n\t\t\t\t\tstr = after;\r\n\t\t\t\t\tcurrentIndex = Math.max(currentIndex, end);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfinalStr += before + repl[2];\r\n\t\t\t\t\tstr = \"\";\r\n\t\t\t\t\tremoveChars = end - newCurrentIndex;\r\n\t\t\t\t}\r\n\t\t\t\tidxReplacement--;\r\n\t\t\t}\r\n\t\t\tstr = finalStr + str;\r\n\t\t}\r\n\t\tcurrentIndex = newCurrentIndex;\r\n\t\treturn str;\r\n\t});\r\n\tvar extraCode = \"\";\r\n\twhile(idxReplacement >= 0) {\r\n\t\textraCode += replacements[idxReplacement][2];\r\n\t\tidxReplacement--;\r\n\t}\r\n\tif(extraCode) {\r\n\t\tmap.add(extraCode);\r\n\t}\r\n\treturn map;\r\n};\r\n\r\nReplaceSource.prototype._replacementToSourceNode = function(oldNode, newString) {\r\n\tvar map = oldNode.toStringWithSourceMap({\r\n\t\tfile: \"?\"\r\n\t}).map;\r\n\tvar original = new SourceMapConsumer(map.toJSON()).originalPositionFor({\r\n\t\tline: 1,\r\n\t\tcolumn: 0\r\n\t});\r\n\tif(original) {\r\n\t\treturn new SourceNode(original.line, original.column, original.source, newString);\r\n\t} else {\r\n\t\treturn newString;\r\n\t}\r\n};\r\n\r\nReplaceSource.prototype._splitSourceNode = function(node, position) {\r\n\tif(typeof node === \"string\") {\r\n\t\tif(node.length <= position) return position - node.length;\r\n\t\treturn position <= 0 ? [\"\", node] : [node.substr(0, position), node.substr(position)];\r\n\t} else {\r\n\t\tfor(var i = 0; i < node.children.length; i++) {\r\n\t\t\tposition = this._splitSourceNode(node.children[i], position);\r\n\t\t\tif(Array.isArray(position)) {\r\n\t\t\t\tvar leftNode = new SourceNode(\r\n\t\t\t\t\tnode.line,\r\n\t\t\t\t\tnode.column,\r\n\t\t\t\t\tnode.source,\r\n\t\t\t\t\tnode.children.slice(0, i).concat([position[0]]),\r\n\t\t\t\t\tnode.name\r\n\t\t\t\t);\r\n\t\t\t\tvar rightNode = new SourceNode(\r\n\t\t\t\t\tnode.line,\r\n\t\t\t\t\tnode.column,\r\n\t\t\t\t\tnode.source, [position[1]].concat(node.children.slice(i + 1)),\r\n\t\t\t\t\tnode.name\r\n\t\t\t\t);\r\n\t\t\t\tleftNode.sourceContents = node.sourceContents;\r\n\t\t\t\treturn [leftNode, rightNode];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn position;\r\n\t}\r\n};\r\n\r\nReplaceSource.prototype._splitString = function(str, position) {\r\n\treturn position <= 0 ? [\"\", str] : [str.substr(0, position), str.substr(position)];\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}