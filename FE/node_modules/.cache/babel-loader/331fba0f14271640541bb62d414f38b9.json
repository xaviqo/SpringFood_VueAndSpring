{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\nmodule.exports = SourceNode; // circular dependency\n\nvar base64VLQ = require(\"./base64-vlq\");\n\nvar getNumberOfLines = require(\"./helpers\").getNumberOfLines;\n\nvar getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nvar SingleLineNode = require(\"./SingleLineNode\");\n\nfunction SourceNode(generatedCode, source, originalSource, startingLine) {\n  this.generatedCode = generatedCode;\n  this.originalSource = originalSource;\n  this.source = source;\n  this.startingLine = startingLine || 1;\n  this._numberOfLines = getNumberOfLines(this.generatedCode);\n  this._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\n}\n\nSourceNode.prototype.clone = function () {\n  return new SourceNode(this.generatedCode, this.source, this.originalSource, this.startingLine);\n};\n\nvar LINE_MAPPING = \";AACA\";\n\nSourceNode.prototype.getGeneratedCode = function () {\n  return this.generatedCode;\n};\n\nSourceNode.prototype.addGeneratedCode = function (code) {\n  this.generatedCode += code;\n  this._numberOfLines += getNumberOfLines(code);\n  this._endsWithNewLine = code[code.length - 1] === \"\\n\";\n};\n\nSourceNode.prototype.getMappings = function (mappingsContext) {\n  if (!this.generatedCode) return \"\";\n  var lines = this._numberOfLines;\n  var sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\n  var mappings = \"A\"; // generated column 0\n\n  if (mappingsContext.unfinishedGeneratedLine) mappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\n  mappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\n\n  mappings += base64VLQ.encode(this.startingLine - mappingsContext.currentOriginalLine); // original line index\n\n  mappings += \"A\"; // original column 0\n\n  mappingsContext.currentSource = sourceIdx;\n  mappingsContext.currentOriginalLine = this.startingLine + lines - 1;\n  var unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n  mappings += Array(lines).join(LINE_MAPPING);\n\n  if (unfinishedGeneratedLine === 0) {\n    mappings += \";\";\n  } else {\n    if (lines !== 0) {\n      mappings += LINE_MAPPING;\n    }\n\n    mappingsContext.currentOriginalLine++;\n  }\n\n  return mappings;\n};\n\nSourceNode.prototype.mapGeneratedCode = function (fn) {\n  throw new Error(\"Cannot map generated code on a SourceMap. Normalize to SingleLineNode first.\");\n};\n\nSourceNode.prototype.getNormalizedNodes = function () {\n  var results = [];\n  var currentLine = this.startingLine;\n  var generatedCode = this.generatedCode;\n  var index = 0;\n  var indexEnd = generatedCode.length;\n\n  while (index < indexEnd) {\n    // get one generated line\n    var nextLine = generatedCode.indexOf(\"\\n\", index) + 1;\n    if (nextLine === 0) nextLine = indexEnd;\n    var lineGenerated = generatedCode.substr(index, nextLine - index);\n    results.push(new SingleLineNode(lineGenerated, this.source, this.originalSource, currentLine)); // move cursors\n\n    index = nextLine;\n    currentLine++;\n  }\n\n  return results;\n};\n\nSourceNode.prototype.merge = function merge(otherNode) {\n  if (otherNode instanceof SourceNode) {\n    return this.mergeSourceNode(otherNode);\n  } else if (otherNode instanceof SingleLineNode) {\n    return this.mergeSingleLineNode(otherNode);\n  }\n\n  return false;\n};\n\nSourceNode.prototype.mergeSourceNode = function mergeSourceNode(otherNode) {\n  if (this.source === otherNode.source && this._endsWithNewLine && this.startingLine + this._numberOfLines === otherNode.startingLine) {\n    this.generatedCode += otherNode.generatedCode;\n    this._numberOfLines += otherNode._numberOfLines;\n    this._endsWithNewLine = otherNode._endsWithNewLine;\n    return this;\n  }\n\n  return false;\n};\n\nSourceNode.prototype.mergeSingleLineNode = function mergeSingleLineNode(otherNode) {\n  if (this.source === otherNode.source && this._endsWithNewLine && this.startingLine + this._numberOfLines === otherNode.line && otherNode._numberOfLines <= 1) {\n    this.addSingleLineNode(otherNode);\n    return this;\n  }\n\n  return false;\n};\n\nSourceNode.prototype.addSingleLineNode = function addSingleLineNode(otherNode) {\n  this.generatedCode += otherNode.generatedCode;\n  this._numberOfLines += otherNode._numberOfLines;\n  this._endsWithNewLine = otherNode._endsWithNewLine;\n};","map":{"version":3,"names":["module","exports","SourceNode","base64VLQ","require","getNumberOfLines","getUnfinishedLine","SingleLineNode","generatedCode","source","originalSource","startingLine","_numberOfLines","_endsWithNewLine","length","prototype","clone","LINE_MAPPING","getGeneratedCode","addGeneratedCode","code","getMappings","mappingsContext","lines","sourceIdx","ensureSource","mappings","unfinishedGeneratedLine","encode","currentSource","currentOriginalLine","Array","join","mapGeneratedCode","fn","Error","getNormalizedNodes","results","currentLine","index","indexEnd","nextLine","indexOf","lineGenerated","substr","push","merge","otherNode","mergeSourceNode","mergeSingleLineNode","line","addSingleLineNode"],"sources":["/home/xavi/Desktop/TRABAJOS/SpringFood/FE/springfood/node_modules/source-list-map/lib/SourceNode.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = SourceNode; // circular dependency\r\n\r\nvar base64VLQ = require(\"./base64-vlq\");\r\nvar getNumberOfLines = require(\"./helpers\").getNumberOfLines;\r\nvar getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\r\nvar SingleLineNode = require(\"./SingleLineNode\");\r\n\r\nfunction SourceNode(generatedCode, source, originalSource, startingLine) {\r\n\tthis.generatedCode = generatedCode;\r\n\tthis.originalSource = originalSource;\r\n\tthis.source = source;\r\n\tthis.startingLine = startingLine || 1;\r\n\tthis._numberOfLines = getNumberOfLines(this.generatedCode);\r\n\tthis._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\r\n}\r\n\r\nSourceNode.prototype.clone = function() {\r\n\treturn new SourceNode(this.generatedCode, this.source, this.originalSource, this.startingLine);\r\n}\r\n\r\nvar LINE_MAPPING = \";AACA\";\r\n\r\nSourceNode.prototype.getGeneratedCode = function() {\r\n\treturn this.generatedCode;\r\n};\r\n\r\nSourceNode.prototype.addGeneratedCode = function(code) {\r\n\tthis.generatedCode += code;\r\n\tthis._numberOfLines += getNumberOfLines(code);\r\n\tthis._endsWithNewLine = code[code.length - 1] === \"\\n\";\r\n};\r\n\r\nSourceNode.prototype.getMappings = function(mappingsContext) {\r\n\tif(!this.generatedCode)\r\n\t\treturn \"\";\r\n\tvar lines = this._numberOfLines;\r\n\tvar sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\r\n\tvar mappings = \"A\"; // generated column 0\r\n\tif(mappingsContext.unfinishedGeneratedLine)\r\n\t\tmappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\r\n\tmappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\r\n\tmappings += base64VLQ.encode(this.startingLine - mappingsContext.currentOriginalLine); // original line index\r\n\tmappings += \"A\"; // original column 0\r\n\tmappingsContext.currentSource = sourceIdx;\r\n\tmappingsContext.currentOriginalLine = this.startingLine + lines - 1;\r\n\tvar unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode)\r\n\tmappings += Array(lines).join(LINE_MAPPING);\r\n\tif(unfinishedGeneratedLine === 0) {\r\n\t\tmappings += \";\";\r\n\t} else {\r\n\t\tif(lines !== 0) {\r\n\t\t\tmappings += LINE_MAPPING;\r\n\t\t}\r\n\t\tmappingsContext.currentOriginalLine++;\r\n\t}\r\n\treturn mappings;\r\n};\r\n\r\nSourceNode.prototype.mapGeneratedCode = function(fn) {\r\n\tthrow new Error(\"Cannot map generated code on a SourceMap. Normalize to SingleLineNode first.\");\r\n};\r\n\r\nSourceNode.prototype.getNormalizedNodes = function() {\r\n\tvar results = [];\r\n\tvar currentLine = this.startingLine;\r\n\tvar generatedCode = this.generatedCode;\r\n\tvar index = 0;\r\n\tvar indexEnd = generatedCode.length;\r\n\twhile(index < indexEnd) {\r\n\t\t// get one generated line\r\n\t\tvar nextLine = generatedCode.indexOf(\"\\n\", index) + 1;\r\n\t\tif(nextLine === 0) nextLine = indexEnd;\r\n\t\tvar lineGenerated = generatedCode.substr(index, nextLine - index);\r\n\r\n\t\tresults.push(new SingleLineNode(lineGenerated, this.source, this.originalSource, currentLine));\r\n\r\n\t\t// move cursors\r\n\t\tindex = nextLine;\r\n\t\tcurrentLine++;\r\n\t}\r\n\treturn results;\r\n};\r\n\r\nSourceNode.prototype.merge = function merge(otherNode) {\r\n\tif(otherNode instanceof SourceNode) {\r\n\t\treturn this.mergeSourceNode(otherNode);\r\n\t} else if(otherNode instanceof SingleLineNode) {\r\n\t\treturn this.mergeSingleLineNode(otherNode);\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nSourceNode.prototype.mergeSourceNode = function mergeSourceNode(otherNode) {\r\n\tif(this.source === otherNode.source &&\r\n\t\tthis._endsWithNewLine &&\r\n\t\tthis.startingLine + this._numberOfLines === otherNode.startingLine) {\r\n\t\tthis.generatedCode += otherNode.generatedCode;\r\n\t\tthis._numberOfLines += otherNode._numberOfLines;\r\n\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\r\n\t\treturn this;\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nSourceNode.prototype.mergeSingleLineNode = function mergeSingleLineNode(otherNode) {\r\n\tif(this.source === otherNode.source &&\r\n\t\tthis._endsWithNewLine &&\r\n\t\tthis.startingLine + this._numberOfLines === otherNode.line &&\r\n\t\totherNode._numberOfLines <= 1) {\r\n\t\tthis.addSingleLineNode(otherNode);\r\n\t\treturn this;\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nSourceNode.prototype.addSingleLineNode = function addSingleLineNode(otherNode) {\r\n\tthis.generatedCode += otherNode.generatedCode;\r\n\tthis._numberOfLines += otherNode._numberOfLines\r\n\tthis._endsWithNewLine = otherNode._endsWithNewLine;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}