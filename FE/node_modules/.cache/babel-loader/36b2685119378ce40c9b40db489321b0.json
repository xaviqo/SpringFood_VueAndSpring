{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\nmodule.exports = SingleLineNode; // circular dependency\n\nvar base64VLQ = require(\"./base64-vlq\");\n\nvar getNumberOfLines = require(\"./helpers\").getNumberOfLines;\n\nvar getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\n\nvar SourceNode = require(\"./SourceNode\");\n\nfunction SingleLineNode(generatedCode, source, originalSource, line) {\n  this.generatedCode = generatedCode;\n  this.originalSource = originalSource;\n  this.source = source;\n  this.line = line || 1;\n  this._numberOfLines = getNumberOfLines(this.generatedCode);\n  this._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\n}\n\nSingleLineNode.prototype.clone = function () {\n  return new SingleLineNode(this.generatedCode, this.source, this.originalSource, this.line);\n};\n\nvar LINE_MAPPING = \";AAAA\";\n\nSingleLineNode.prototype.getGeneratedCode = function () {\n  return this.generatedCode;\n};\n\nSingleLineNode.prototype.getMappings = function (mappingsContext) {\n  if (!this.generatedCode) return \"\";\n  var lines = this._numberOfLines;\n  var sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\n  var mappings = \"A\"; // generated column 0\n\n  if (mappingsContext.unfinishedGeneratedLine) mappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\n  mappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\n\n  mappings += base64VLQ.encode(this.line - mappingsContext.currentOriginalLine); // original line index\n\n  mappings += \"A\"; // original column 0\n\n  mappingsContext.currentSource = sourceIdx;\n  mappingsContext.currentOriginalLine = this.line;\n  var unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode);\n  mappings += Array(lines).join(LINE_MAPPING);\n\n  if (unfinishedGeneratedLine === 0) {\n    mappings += \";\";\n  } else {\n    if (lines !== 0) mappings += LINE_MAPPING;\n  }\n\n  return mappings;\n};\n\nSingleLineNode.prototype.getNormalizedNodes = function () {\n  return [this];\n};\n\nSingleLineNode.prototype.mapGeneratedCode = function (fn) {\n  var generatedCode = fn(this.generatedCode);\n  return new SingleLineNode(generatedCode, this.source, this.originalSource, this.line);\n};\n\nSingleLineNode.prototype.merge = function merge(otherNode) {\n  if (otherNode instanceof SingleLineNode) {\n    return this.mergeSingleLineNode(otherNode);\n  }\n\n  return false;\n};\n\nSingleLineNode.prototype.mergeSingleLineNode = function mergeSingleLineNode(otherNode) {\n  if (this.source === otherNode.source && this.originalSource === otherNode.originalSource) {\n    if (this.line === otherNode.line) {\n      this.generatedCode += otherNode.generatedCode;\n      this._numberOfLines += otherNode._numberOfLines;\n      this._endsWithNewLine = otherNode._endsWithNewLine;\n      return this;\n    } else if (this.line + 1 === otherNode.line && this._endsWithNewLine && this._numberOfLines === 1 && otherNode._numberOfLines <= 1) {\n      return new SourceNode(this.generatedCode + otherNode.generatedCode, this.source, this.originalSource, this.line);\n    }\n  }\n\n  return false;\n};","map":{"version":3,"names":["module","exports","SingleLineNode","base64VLQ","require","getNumberOfLines","getUnfinishedLine","SourceNode","generatedCode","source","originalSource","line","_numberOfLines","_endsWithNewLine","length","prototype","clone","LINE_MAPPING","getGeneratedCode","getMappings","mappingsContext","lines","sourceIdx","ensureSource","mappings","unfinishedGeneratedLine","encode","currentSource","currentOriginalLine","Array","join","getNormalizedNodes","mapGeneratedCode","fn","merge","otherNode","mergeSingleLineNode"],"sources":["/home/xavi/Desktop/TRABAJOS/SpringFood/FE/springfood/node_modules/source-list-map/lib/SingleLineNode.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = SingleLineNode; // circular dependency\r\n\r\nvar base64VLQ = require(\"./base64-vlq\");\r\nvar getNumberOfLines = require(\"./helpers\").getNumberOfLines;\r\nvar getUnfinishedLine = require(\"./helpers\").getUnfinishedLine;\r\nvar SourceNode = require(\"./SourceNode\");\r\n\r\nfunction SingleLineNode(generatedCode, source, originalSource, line) {\r\n\tthis.generatedCode = generatedCode;\r\n\tthis.originalSource = originalSource;\r\n\tthis.source = source;\r\n\tthis.line = line || 1;\r\n\tthis._numberOfLines = getNumberOfLines(this.generatedCode);\r\n\tthis._endsWithNewLine = generatedCode[generatedCode.length - 1] === \"\\n\";\r\n}\r\n\r\nSingleLineNode.prototype.clone = function() {\r\n\treturn new SingleLineNode(this.generatedCode, this.source, this.originalSource, this.line);\r\n}\r\n\r\nvar LINE_MAPPING = \";AAAA\";\r\n\r\nSingleLineNode.prototype.getGeneratedCode = function() {\r\n\treturn this.generatedCode;\r\n};\r\n\r\nSingleLineNode.prototype.getMappings = function(mappingsContext) {\r\n\tif(!this.generatedCode)\r\n\t\treturn \"\";\r\n\tvar lines = this._numberOfLines;\r\n\tvar sourceIdx = mappingsContext.ensureSource(this.source, this.originalSource);\r\n\tvar mappings = \"A\"; // generated column 0\r\n\tif(mappingsContext.unfinishedGeneratedLine)\r\n\t\tmappings = \",\" + base64VLQ.encode(mappingsContext.unfinishedGeneratedLine);\r\n\tmappings += base64VLQ.encode(sourceIdx - mappingsContext.currentSource); // source index\r\n\tmappings += base64VLQ.encode(this.line - mappingsContext.currentOriginalLine); // original line index\r\n\tmappings += \"A\"; // original column 0\r\n\tmappingsContext.currentSource = sourceIdx;\r\n\tmappingsContext.currentOriginalLine = this.line;\r\n\tvar unfinishedGeneratedLine = mappingsContext.unfinishedGeneratedLine = getUnfinishedLine(this.generatedCode)\r\n\tmappings += Array(lines).join(LINE_MAPPING);\r\n\tif(unfinishedGeneratedLine === 0) {\r\n\t\tmappings += \";\";\r\n\t} else {\r\n\t\tif(lines !== 0)\r\n\t\t\tmappings += LINE_MAPPING;\r\n\t}\r\n\treturn mappings;\r\n};\r\n\r\nSingleLineNode.prototype.getNormalizedNodes = function() {\r\n\treturn [this];\r\n};\r\n\r\nSingleLineNode.prototype.mapGeneratedCode = function(fn) {\r\n\tvar generatedCode = fn(this.generatedCode);\r\n\treturn new SingleLineNode(generatedCode, this.source, this.originalSource, this.line);\r\n};\r\n\r\nSingleLineNode.prototype.merge = function merge(otherNode) {\r\n\tif(otherNode instanceof SingleLineNode) {\r\n\t\treturn this.mergeSingleLineNode(otherNode);\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nSingleLineNode.prototype.mergeSingleLineNode = function mergeSingleLineNode(otherNode) {\r\n\tif(this.source === otherNode.source &&\r\n\t\tthis.originalSource === otherNode.originalSource) {\r\n\t\tif(this.line === otherNode.line) {\r\n\t\t\tthis.generatedCode += otherNode.generatedCode;\r\n\t\t\tthis._numberOfLines += otherNode._numberOfLines;\r\n\t\t\tthis._endsWithNewLine = otherNode._endsWithNewLine;\r\n\t\t\treturn this;\r\n\t\t} else if(this.line + 1 === otherNode.line && \r\n\t\t\tthis._endsWithNewLine &&\r\n\t\t\tthis._numberOfLines === 1 && \r\n\t\t\totherNode._numberOfLines <= 1) {\r\n\t\t\treturn new SourceNode(this.generatedCode + otherNode.generatedCode, this.source, this.originalSource, this.line);\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}