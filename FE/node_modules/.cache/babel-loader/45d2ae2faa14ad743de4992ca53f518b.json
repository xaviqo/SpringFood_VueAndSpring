{"ast":null,"code":"const API_URL = \"https://fonts.googleapis.com/css\";\n\nfunction getVariantName(variant) {\n  if (variant === \"regular\") {\n    return \"400\";\n  } else if (variant === \"italic\") {\n    return \"400i\";\n  }\n\n  const weight = parseInt(variant.substr(0, 3)) || 400;\n\n  if (/italic$/.test(variant)) {\n    return `${weight}i`;\n  }\n\n  return weight.toString();\n}\n\nmodule.exports = function googleFontsUrl(fonts, apiUrl = API_URL) {\n  const fontQueries = [];\n  fonts.forEach(({\n    family,\n    subsets,\n    variants\n  }) => {\n    let query = family.replace(\" \", \"+\");\n\n    if (variants) {\n      query += \":\" + variants.map(name => getVariantName(name)).join(\",\");\n    }\n\n    if (subsets) {\n      query += \"&subset=\" + subsets.join(\",\");\n    }\n\n    fontQueries.push(query);\n  });\n  return `${apiUrl}?family=${fontQueries.join(\"|\")}`;\n};","map":{"version":3,"names":["API_URL","getVariantName","variant","weight","parseInt","substr","test","toString","module","exports","googleFontsUrl","fonts","apiUrl","fontQueries","forEach","family","subsets","variants","query","replace","map","name","join","push"],"sources":["/home/xavi/Desktop/TRABAJOS/SpringFood/FE/springfood/node_modules/google-fonts-webpack-plugin/src/cssUrl.js"],"sourcesContent":["const API_URL = \"https://fonts.googleapis.com/css\"\n\nfunction getVariantName(variant) {\n\tif(variant === \"regular\") {\n\t\treturn \"400\"\n\t} else if(variant === \"italic\") {\n\t\treturn \"400i\"\n\t}\n\tconst weight = parseInt(variant.substr(0, 3)) || 400\n\tif(/italic$/.test(variant)) {\n\t\treturn `${weight}i`\n\t}\n\treturn weight.toString()\n}\n\nmodule.exports = function googleFontsUrl(fonts, apiUrl = API_URL) {\n\tconst fontQueries = []\n\tfonts.forEach(({ family, subsets, variants }) => {\n\t\tlet query = family.replace(\" \", \"+\")\n\t\tif(variants) {\n\t\t\tquery += \":\" + variants.map(name => getVariantName(name)).join(\",\")\n\t\t}\n\t\tif(subsets) {\n\t\t\tquery += \"&subset=\" + subsets.join(\",\")\n\t\t}\n\t\tfontQueries.push(query)\n\t})\n\treturn `${apiUrl}?family=${fontQueries.join(\"|\")}`\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAhB;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;EAChC,IAAGA,OAAO,KAAK,SAAf,EAA0B;IACzB,OAAO,KAAP;EACA,CAFD,MAEO,IAAGA,OAAO,KAAK,QAAf,EAAyB;IAC/B,OAAO,MAAP;EACA;;EACD,MAAMC,MAAM,GAAGC,QAAQ,CAACF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,CAAlB,CAAD,CAAR,IAAkC,GAAjD;;EACA,IAAG,UAAUC,IAAV,CAAeJ,OAAf,CAAH,EAA4B;IAC3B,OAAQ,GAAEC,MAAO,GAAjB;EACA;;EACD,OAAOA,MAAM,CAACI,QAAP,EAAP;AACA;;AAEDC,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAAM,GAAGZ,OAAxC,EAAiD;EACjE,MAAMa,WAAW,GAAG,EAApB;EACAF,KAAK,CAACG,OAAN,CAAc,CAAC;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,CAAD,KAAmC;IAChD,IAAIC,KAAK,GAAGH,MAAM,CAACI,OAAP,CAAe,GAAf,EAAoB,GAApB,CAAZ;;IACA,IAAGF,QAAH,EAAa;MACZC,KAAK,IAAI,MAAMD,QAAQ,CAACG,GAAT,CAAaC,IAAI,IAAIpB,cAAc,CAACoB,IAAD,CAAnC,EAA2CC,IAA3C,CAAgD,GAAhD,CAAf;IACA;;IACD,IAAGN,OAAH,EAAY;MACXE,KAAK,IAAI,aAAaF,OAAO,CAACM,IAAR,CAAa,GAAb,CAAtB;IACA;;IACDT,WAAW,CAACU,IAAZ,CAAiBL,KAAjB;EACA,CATD;EAUA,OAAQ,GAAEN,MAAO,WAAUC,WAAW,CAACS,IAAZ,CAAiB,GAAjB,CAAsB,EAAjD;AACA,CAbD"},"metadata":{},"sourceType":"script"}