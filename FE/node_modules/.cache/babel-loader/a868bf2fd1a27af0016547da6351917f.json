{"ast":null,"code":"/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\nvar SourceNode = require(\"source-map\").SourceNode;\n\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nvar Source = require(\"./Source\");\n\nfunction ConcatSource() {\n  Source.call(this);\n  this.children = Array.prototype.slice.call(arguments);\n}\n\nmodule.exports = ConcatSource;\nConcatSource.prototype = Object.create(Source.prototype);\nConcatSource.prototype.constructor = ConcatSource;\n\nConcatSource.prototype.add = function (item) {\n  this.children.push(item);\n};\n\nConcatSource.prototype.source = function () {\n  return this.children.map(function (item) {\n    return typeof item === \"string\" ? item : item.source();\n  }).join(\"\");\n};\n\nConcatSource.prototype.size = function () {\n  return this.children.map(function (item) {\n    return typeof item === \"string\" ? item.length : item.size();\n  }).reduce(function (sum, s) {\n    return sum + s;\n  }, 0);\n};\n\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\n\nConcatSource.prototype.node = function (options) {\n  var node = new SourceNode(null, null, null, this.children.map(function (item) {\n    return typeof item === \"string\" ? item : item.node(options);\n  }));\n  return node;\n};\n\nConcatSource.prototype.listMap = function (options) {\n  var map = new SourceListMap();\n  this.children.forEach(function (item) {\n    if (typeof item === \"string\") map.add(item);else map.add(item.listMap(options));\n  });\n  return map;\n};\n\nConcatSource.prototype.updateHash = function (hash) {\n  this.children.forEach(function (item) {\n    if (typeof item === \"string\") hash.update(item);else item.updateHash(hash);\n  });\n};","map":{"version":3,"names":["SourceNode","require","SourceListMap","Source","ConcatSource","call","children","Array","prototype","slice","arguments","module","exports","Object","create","constructor","add","item","push","source","map","join","size","length","reduce","sum","s","node","options","listMap","forEach","updateHash","hash","update"],"sources":["/home/xavi/Desktop/TRABAJOS/SpringFood/FE/springfood/node_modules/google-fonts-webpack-plugin/node_modules/webpack-sources/lib/ConcatSource.js"],"sourcesContent":["/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar SourceNode = require(\"source-map\").SourceNode;\r\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\r\nvar Source = require(\"./Source\");\r\n\r\nfunction ConcatSource() {\r\n\tSource.call(this);\r\n\tthis.children = Array.prototype.slice.call(arguments);\r\n}\r\nmodule.exports = ConcatSource;\r\n\r\nConcatSource.prototype = Object.create(Source.prototype);\r\nConcatSource.prototype.constructor = ConcatSource;\r\n\r\nConcatSource.prototype.add = function(item) {\r\n\tthis.children.push(item);\r\n};\r\n\r\nConcatSource.prototype.source = function() {\r\n\treturn this.children.map(function(item) {\r\n\t\treturn typeof item === \"string\" ? item : item.source();\r\n\t}).join(\"\");\r\n};\r\n\r\nConcatSource.prototype.size = function() {\r\n\treturn this.children.map(function(item) {\r\n\t\treturn typeof item === \"string\" ? item.length : item.size();\r\n\t}).reduce(function(sum, s) {\r\n\t\treturn sum + s;\r\n\t}, 0);\r\n};\r\n\r\nrequire(\"./SourceAndMapMixin\")(ConcatSource.prototype);\r\n\r\nConcatSource.prototype.node = function(options) {\r\n\tvar node = new SourceNode(null, null, null, this.children.map(function(item) {\r\n\t\treturn typeof item === \"string\" ? item : item.node(options);\r\n\t}));\r\n\treturn node;\r\n};\r\n\r\nConcatSource.prototype.listMap = function(options) {\r\n\tvar map = new SourceListMap();\r\n\tthis.children.forEach(function(item) {\r\n\t\tif(typeof item === \"string\")\r\n\t\t\tmap.add(item);\r\n\t\telse\r\n\t\t\tmap.add(item.listMap(options));\r\n\t});\r\n\treturn map;\r\n};\r\n\r\nConcatSource.prototype.updateHash = function(hash) {\r\n\tthis.children.forEach(function(item) {\r\n\t\tif(typeof item === \"string\")\r\n\t\t\thash.update(item);\r\n\t\telse\r\n\t\t\titem.updateHash(hash);\r\n\t});\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}