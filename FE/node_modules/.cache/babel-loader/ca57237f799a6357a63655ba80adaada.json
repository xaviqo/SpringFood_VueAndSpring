{"ast":null,"code":"export default {\n  data: () => ({\n    cards: [{\n      id: \"delivered\",\n      title: \"Delivered orders\",\n      icon: \"mdi-truck-delivery\",\n      remain: 3,\n      total: 6,\n      percent: 0,\n      active: true\n    }, {\n      id: \"earnings\",\n      title: \"Total earnings\",\n      icon: \"mdi-cash-multiple\",\n      today: 0,\n      week: 0,\n      month: 0,\n      active: true\n    }, {\n      id: \"remaining\",\n      title: \"Remaining orders\",\n      icon: \"mdi-timer-sand\",\n      pending: 0,\n      delivered: 0,\n      active: true\n    }, {\n      id: \"products\",\n      title: \"Stock status\",\n      icon: \"mdi-food-fork-drink\",\n      lowStock: {\n        id: 0,\n        stock: 0\n      },\n      topSelling: {\n        id: 0,\n        sold: 0\n      },\n      active: true\n    }]\n  }),\n  beforeUpdate: {\n    updateDeliveredPercent() {\n      this.cards.forEach(c => {\n        if (c.hasOwnProperty('percent')) {\n          c.percent = 100 - Math.round(c.remain / c.total * 100);\n        }\n      });\n    }\n\n  },\n  methods: {}\n};","map":{"version":3,"mappings":"AAyCA;EACAA;IACAC,QACA;MACAC,eADA;MAEAC,yBAFA;MAGAC,0BAHA;MAIAC,SAJA;MAKAC,QALA;MAMAC,UANA;MAOAC;IAPA,CADA,EAUA;MACAN,cADA;MAEAC,uBAFA;MAGAC,yBAHA;MAIAK,QAJA;MAKAC,OALA;MAMAC,QANA;MAOAH;IAPA,CAVA,EAmBA;MACAN,eADA;MAEAC,yBAFA;MAGAC,sBAHA;MAIAQ,UAJA;MAKAC,YALA;MAMAL;IANA,CAnBA,EA2BA;MACAN,cADA;MAEAC,qBAFA;MAGAC,2BAHA;MAIAU;QACAZ,KADA;QAEAa;MAFA,CAJA;MAQAC;QACAd,KADA;QAEAe;MAFA,CARA;MAYAT;IAZA,CA3BA;EADA,EADA;EA6CAU;IACAC;MACA;QACA;UACAC;QACA;MACA,CAJA;IAKA;;EAPA,CA7CA;EAsDAC;AAtDA","names":["data","cards","id","title","icon","remain","total","percent","active","today","week","month","pending","delivered","lowStock","stock","topSelling","sold","beforeUpdate","updateDeliveredPercent","c","methods"],"sourceRoot":"src/components","sources":["DashboardCards.vue"],"sourcesContent":["<template>\n  <v-row>\n    <template v-for=\"card in cards\">\n      <v-col v-if=\"card.active\" :key=\"card.id\">\n        <v-card class=\"pa-2\" outlined tile>\n          <div class=\"d-flex flex-no-wrap justify-space-between\">\n            <div>\n              <v-card-title class=\"body-1 text-weight-light\" v-text=\"card.title\"/>\n            </div>\n              <v-avatar size=\"50\">\n                <v-icon color=\"green\" large>{{card.icon}}</v-icon>\n              </v-avatar>\n          </div>\n          <v-divider/>\n          <div v-if=\"card.id === 'delivered'\">\n            <!-- <v-progress-linear\n              class=\"mt-4\"\n              color=\"teal\"\n              buffer-value=\"0\"\n              value=\"20\"\n              stream>\n            </v-progress-linear> -->\n                <v-progress-circular\n      :rotate=\"360\"\n      :size=\"100\"\n      :width=\"15\"\n      :value=\"card.percent\"\n      color=\"teal\"\n    >\n        </v-progress-circular>\n          </div>\n          <div v-else>\n            esos\n          </div>\n        </v-card>\n      </v-col>\n    </template>\n  </v-row>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    cards: [\n      {\n        id: \"delivered\",\n        title: \"Delivered orders\",\n        icon: \"mdi-truck-delivery\",\n        remain: 3,\n        total: 6,\n        percent: 0,\n        active: true,\n      },\n      {\n        id: \"earnings\",\n        title: \"Total earnings\",\n        icon: \"mdi-cash-multiple\",\n        today: 0,\n        week: 0,\n        month: 0,\n        active: true,\n      },\n      {\n        id: \"remaining\",\n        title: \"Remaining orders\",\n        icon: \"mdi-timer-sand\",\n        pending: 0,\n        delivered: 0,\n        active: true,\n      },\n      {\n        id: \"products\",\n        title: \"Stock status\",\n        icon: \"mdi-food-fork-drink\",\n        lowStock: {\n          id: 0,\n          stock: 0,\n        },\n        topSelling: {\n          id: 0,\n          sold: 0,\n        },\n        active: true,\n      },\n    ],\n  }),\n  beforeUpdate: {\n    updateDeliveredPercent() {\n      this.cards.forEach(c => {\n        if (c.hasOwnProperty('percent')){\n          c.percent = 100-(Math.round((c.remain/c.total)*100));\n        } \n      });\n    }\n  },\n  methods: {},\n};\n</script>"]},"metadata":{},"sourceType":"module"}